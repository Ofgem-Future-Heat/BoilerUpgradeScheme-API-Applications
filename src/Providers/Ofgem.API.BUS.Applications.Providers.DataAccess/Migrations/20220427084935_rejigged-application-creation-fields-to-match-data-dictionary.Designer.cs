// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ofgem.API.BUS.Applications.Providers.DataAccess;

#nullable disable

namespace Ofgem.API.BUS.Applications.Providers.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationsDBContext))]
    [Migration("20220427084935_rejigged-application-creation-fields-to-match-data-dictionary")]
    partial class rejiggedapplicationcreationfieldstomatchdatadictionary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ApplicationSubStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfQuote")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EpcExists")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EpcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FuelTypeOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallationAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallerUserAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsBeingAudited")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGasGrid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLoftCavityExempt")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewBuild")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelfBuild")
                        .HasColumnType("bit");

                    b.Property<string>("PreviousFuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyOwnerDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("QuoteAmount")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("QuoteReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("RuralStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TechTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TechnologyCost")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ID");

                    b.HasIndex("EpcId");

                    b.HasIndex("InstallationAddressID");

                    b.HasIndex("PropertyOwnerDetailID");

                    b.HasIndex("TechTypeID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .HasDatabaseName("AS_Index_Code");

                    b.ToTable("ApplicationStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ApplicationSubStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("Code")
                        .HasDatabaseName("ASS_Index_Code");

                    b.ToTable("ApplicationSubStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ConsentRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ConsentReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sent")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationID");

                    b.ToTable("ConsentRequests");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Epc", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EpcReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EPCs");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.GlobalSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("GeneratedByID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NextApplicationReferenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NextApplicationReferenceNumber"), 10000000L, 1);

                    b.HasKey("ID");

                    b.ToTable("GlobalSettings");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Grant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("TechTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("TechTypeID");

                    b.ToTable("Grants");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.InstallationAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("County")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("UPRN")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.HasIndex("UPRN")
                        .HasDatabaseName("IA_Index_UPRN");

                    b.ToTable("InstallationAddresses");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.PropertyOwnerAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPRN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PropertyOwnerAddresses");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.PropertyOwnerDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsAssistedDigital")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWelshTranslation")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PropertyOwnerAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PropertyOwnerAddressId");

                    b.ToTable("PropertyOwnerDetails");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.TechType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TechTypeDescription")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("ID");

                    b.ToTable("TechTypes");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Voucher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrantID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RedemptionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoucherSubStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationID")
                        .IsUnique();

                    b.HasIndex("VoucherSubStatusID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.VoucherStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .HasDatabaseName("VS_Index_Code");

                    b.ToTable("VoucherStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.VoucherSubStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("VoucherStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .HasDatabaseName("VSS_Index_Code");

                    b.HasIndex("VoucherStatusId");

                    b.ToTable("VoucherSubStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.Epc", "Epc")
                        .WithMany()
                        .HasForeignKey("EpcId");

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.InstallationAddress", "InstallationAddress")
                        .WithMany()
                        .HasForeignKey("InstallationAddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.PropertyOwnerDetail", "PropertyOwnerDetail")
                        .WithMany()
                        .HasForeignKey("PropertyOwnerDetailID");

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.TechType", "TechType")
                        .WithMany()
                        .HasForeignKey("TechTypeID");

                    b.Navigation("Epc");

                    b.Navigation("InstallationAddress");

                    b.Navigation("PropertyOwnerDetail");

                    b.Navigation("TechType");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ApplicationSubStatus", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.ApplicationStatus", "ApplicationStatus")
                        .WithMany("ApplicationSubStatus")
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ConsentRequest", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.Application", "Application")
                        .WithMany("ConsentRequests")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Grant", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.TechType", "TechType")
                        .WithMany("Grants")
                        .HasForeignKey("TechTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechType");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.PropertyOwnerDetail", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.PropertyOwnerAddress", "PropertyOwnerAddress")
                        .WithMany()
                        .HasForeignKey("PropertyOwnerAddressId");

                    b.Navigation("PropertyOwnerAddress");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Voucher", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.Application", "Application")
                        .WithOne("Voucher")
                        .HasForeignKey("Ofgem.API.BUS.Applications.Domain.Voucher", "ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.VoucherSubStatus", "VoucherSubStatus")
                        .WithMany()
                        .HasForeignKey("VoucherSubStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("VoucherSubStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.VoucherSubStatus", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.VoucherStatus", "VoucherStatus")
                        .WithMany("VoucherSubStatus")
                        .HasForeignKey("VoucherStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoucherStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.Navigation("ConsentRequests");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ApplicationStatus", b =>
                {
                    b.Navigation("ApplicationSubStatus");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.TechType", b =>
                {
                    b.Navigation("Grants");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.VoucherStatus", b =>
                {
                    b.Navigation("VoucherSubStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
