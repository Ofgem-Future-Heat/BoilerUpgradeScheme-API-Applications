// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ofgem.API.BUS.Applications.Providers.DataAccess;

#nullable disable

namespace Ofgem.API.BUS.Applications.Providers.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationsDBContext))]
    [Migration("20220226181139_AddedTablesAndColumnsNeededForConsentRequest")]
    partial class AddedTablesAndColumnsNeededForConsentRequest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallationAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PropertyOwnerDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PropertyOwnerDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("TechTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("InstallationAddressID");

                    b.HasIndex("PropertyOwnerDetailID");

                    b.HasIndex("TechTypeID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ConsentRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ConsentReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sent")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationID");

                    b.ToTable("ConsentRequests");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.InstallationAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("ID");

                    b.ToTable("InstallationAddresses");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.PropertyOwnerDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("ID");

                    b.ToTable("PropertyOwnerDetails");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.TechType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TechTypeDescription")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("ID");

                    b.ToTable("TechTypes");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.InstallationAddress", "InstallationAddress")
                        .WithMany()
                        .HasForeignKey("InstallationAddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.PropertyOwnerDetail", "PropertyOwnerDetail")
                        .WithMany()
                        .HasForeignKey("PropertyOwnerDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ofgem.API.BUS.Applications.Domain.TechType", "TechType")
                        .WithMany()
                        .HasForeignKey("TechTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstallationAddress");

                    b.Navigation("PropertyOwnerDetail");

                    b.Navigation("TechType");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.ConsentRequest", b =>
                {
                    b.HasOne("Ofgem.API.BUS.Applications.Domain.Application", "Application")
                        .WithMany("ConsentRequests")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Ofgem.API.BUS.Applications.Domain.Application", b =>
                {
                    b.Navigation("ConsentRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
